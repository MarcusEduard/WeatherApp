{"ast":null,"code":"var _jsxFileName = \"/Users/martin/Desktop/Stibo/weather-app/src/WeatherSearch.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherSearch = ({\n  setWeatherData\n}) => {\n  _s();\n  const [location, setLocation] = useState('');\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(`http://api.weatherstack.com/current`, {\n        params: {\n          access_key: 'DIN_API_KEY',\n          query: location\n        }\n      });\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error('Error fetching weather data', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: location,\n      onChange: e => setLocation(e.target.value),\n      placeholder: \"Enter location\",\n      style: {\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherSearch, \"UgG1hO88lpl+MuJHYDyqjwsXOSU=\");\n_c = WeatherSearch;\nexport default WeatherSearch;\nvar _c;\n$RefreshReg$(_c, \"WeatherSearch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","WeatherSearch","setWeatherData","_s","location","setLocation","handleSearch","response","get","params","access_key","query","data","error","console","children","type","value","onChange","e","target","placeholder","style","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/martin/Desktop/Stibo/weather-app/src/WeatherSearch.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\ninterface WeatherSearchProps {\n  setWeatherData: (data: any) => void;\n}\n\nconst WeatherSearch: React.FC<WeatherSearchProps> = ({ setWeatherData }) => {\n  const [location, setLocation] = useState('');\n\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(`http://api.weatherstack.com/current`, {\n        params: {\n          access_key: 'DIN_API_KEY',\n          query: location,\n        },\n      });\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error('Error fetching weather data', error);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={location}\n        onChange={(e) => setLocation(e.target.value)}\n        placeholder=\"Enter location\"\n        style={{ marginRight: '10px' }}\n      />\n      <button onClick={handleSearch}>Search</button>\n    </div>\n  );\n};\n\nexport default WeatherSearch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1B,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,qCAAqC,EAAE;QACtEC,MAAM,EAAE;UACNC,UAAU,EAAE,aAAa;UACzBC,KAAK,EAAEP;QACT;MACF,CAAC,CAAC;MACFF,cAAc,CAACK,QAAQ,CAACK,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,oBACEb,OAAA;IAAAe,QAAA,gBACEf,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEb,QAAS;MAChBc,QAAQ,EAAGC,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACF3B,OAAA;MAAQ4B,OAAO,EAAEtB,YAAa;MAAAS,QAAA,EAAC;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACxB,EAAA,CA7BIF,aAA2C;AAAA4B,EAAA,GAA3C5B,aAA2C;AA+BjD,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
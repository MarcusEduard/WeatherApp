{"ast":null,"code":"var _jsxFileName = \"/Users/martin/Desktop/Stibo/weather-app/src/WeatherSearch.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherSearch = ({\n  setWeatherData,\n  setLoading,\n  setError\n}) => {\n  _s();\n  const [location, setLocation] = useState('');\n  const handleSearch = async () => {\n    if (!location) {\n      setError(\"Please enter a location\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`http://api.weatherstack.com/current`, {\n        params: {\n          access_key: '42e2613ad160a9b6a66a406e19cae99f',\n          query: location\n        }\n      });\n      if (response.data.error) {\n        setError(\"City not found. Please enter another city.\");\n        setWeatherData(null);\n      } else {\n        setWeatherData(response.data);\n      }\n    } catch (error) {\n      setError('Error fetching weather data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: location,\n      onChange: e => setLocation(e.target.value),\n      placeholder: \"Enter location\",\n      className: \"input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      className: \"search-button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherSearch, \"UgG1hO88lpl+MuJHYDyqjwsXOSU=\");\n_c = WeatherSearch;\nexport default WeatherSearch;\nvar _c;\n$RefreshReg$(_c, \"WeatherSearch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","WeatherSearch","setWeatherData","setLoading","setError","_s","location","setLocation","handleSearch","response","get","params","access_key","query","data","error","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/martin/Desktop/Stibo/weather-app/src/WeatherSearch.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\ninterface WeatherSearchProps {\n  setWeatherData: (data: any) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n}\n\nconst WeatherSearch: React.FC<WeatherSearchProps> = ({ setWeatherData, setLoading, setError }) => {\n  const [location, setLocation] = useState('');\n\n  const handleSearch = async () => {\n    if (!location) {\n      setError(\"Please enter a location\");\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await axios.get(`http://api.weatherstack.com/current`, {\n        params: {\n          access_key: '42e2613ad160a9b6a66a406e19cae99f',\n          query: location,\n        },\n      });\n\n      if (response.data.error) {\n        setError(\"City not found. Please enter another city.\");\n        setWeatherData(null);\n      } else {\n        setWeatherData(response.data);\n      }\n    } catch (error) {\n      setError('Error fetching weather data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"weather-search\">\n      <input\n        type=\"text\"\n        value={location}\n        onChange={(e) => setLocation(e.target.value)}\n        placeholder=\"Enter location\"\n        className=\"input-field\"\n      />\n      <button onClick={handleSearch} className=\"search-button\">Search</button>\n    </div>\n  );\n};\n\nexport default WeatherSearch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1B,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,cAAc;EAAEC,UAAU;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACF,QAAQ,EAAE;MACbF,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACF;IAEAD,UAAU,CAAC,IAAI,CAAC;IAChBC,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,qCAAqC,EAAE;QACtEC,MAAM,EAAE;UACNC,UAAU,EAAE,kCAAkC;UAC9CC,KAAK,EAAEP;QACT;MACF,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACK,IAAI,CAACC,KAAK,EAAE;QACvBX,QAAQ,CAAC,4CAA4C,CAAC;QACtDF,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC,MAAM;QACLA,cAAc,CAACO,QAAQ,CAACK,IAAI,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdX,QAAQ,CAAC,gDAAgD,CAAC;IAC5D,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEH,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEb,QAAS;MAChBc,QAAQ,EAAGC,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC,gBAAgB;MAC5BP,SAAS,EAAC;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACF3B,OAAA;MAAQ4B,OAAO,EAAEpB,YAAa;MAACQ,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV,CAAC;AAACtB,EAAA,CA7CIJ,aAA2C;AAAA4B,EAAA,GAA3C5B,aAA2C;AA+CjD,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}